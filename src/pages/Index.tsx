import { useState } from 'react';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardFooter, CardHeader } from '@/components/ui/card';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';
import { Tabs, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

interface Prompt {
  id: number;
  title: string;
  category: string;
  price: number;
  rating: number;
  reviews: number;
  author: string;
  description: string;
  preview: string;
  color: string;
  isPremium?: boolean;
  examples?: string[];
}

const mockPrompts: Prompt[] = [
  {
    id: 1,
    title: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–∞',
    category: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
    price: 299,
    rating: 4.8,
    reviews: 127,
    author: '–ê–Ω–Ω–∞ –°–æ–∫–æ–ª–æ–≤–∞',
    description: '–ü—Ä–æ–º–ø—Ç —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ —Å —É—á–µ—Ç–æ–º —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ –±—é–¥–∂–µ—Ç–∞.',
    preview: '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä—ã–Ω–æ–∫ [–Ω–∏—à–∞] –∏ —Å–æ–∑–¥–∞–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–∞...',
    color: 'from-orange-500 to-pink-500'
  },
  {
    id: 2,
    title: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è YouTube',
    category: '–ü–∏—Å–∞—Ç–µ–ª—å—Å—Ç–≤–æ',
    price: 199,
    rating: 4.9,
    reviews: 203,
    author: '–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤',
    description: '–°–æ–∑–¥–∞–µ—Ç –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è YouTube-–≤–∏–¥–µ–æ –ª—é–±–æ–π —Ç–µ–º–∞—Ç–∏–∫–∏ —Å —Ö—É–∫–∞–º–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∏ –ø—Ä–∏–∑—ã–≤–∞–º–∏ –∫ –¥–µ–π—Å—Ç–≤–∏—é.',
    preview: '–ù–∞–ø–∏—à–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –≤–∏–¥–µ–æ –Ω–∞ —Ç–µ–º—É [—Ç–µ–º–∞] –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é [–≤—Ä–µ–º—è]...',
    color: 'from-cyan-500 to-blue-500'
  },
  {
    id: 3,
    title: 'Python –∫–æ–¥-—Ä–µ–≤—å—é–µ—Ä',
    category: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
    price: 349,
    rating: 4.7,
    reviews: 89,
    author: '–ò–≥–æ—Ä—å –ü–µ—Ç—Ä–æ–≤',
    description: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç Python-–∫–æ–¥, –Ω–∞—Ö–æ–¥–∏—Ç –±–∞–≥–∏, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º best practices.',
    preview: '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π Python –∫–æ–¥ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ —É–ª—É—á—à–µ–Ω–∏—è...',
    color: 'from-green-500 to-emerald-500'
  },
  {
    id: 4,
    title: '–°–æ–∑–¥–∞—Ç–µ–ª—å —É—á–µ–±–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤',
    category: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
    price: 249,
    rating: 4.6,
    reviews: 156,
    author: '–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
    description: '–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—á–µ–±–Ω—ã–µ –ø–ª–∞–Ω—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –ª—é–±–æ–≥–æ –Ω–∞–≤—ã–∫–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ä–∞–º–∫–∞–º–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏.',
    preview: '–°–æ–∑–¥–∞–π —É—á–µ–±–Ω—ã–π –ø–ª–∞–Ω –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è [–Ω–∞–≤—ã–∫] –∑–∞ [—Å—Ä–æ–∫]...',
    color: 'from-purple-500 to-indigo-500'
  },
  {
    id: 5,
    title: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤',
    category: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
    price: 149,
    rating: 4.9,
    reviews: 341,
    author: '–ú–∏—Ö–∞–∏–ª –ö—É–∑–Ω–µ—Ü–æ–≤',
    description: '–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–¥–∞—é—â–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –ª—é–±—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º: Facebook, Instagram, Google Ads —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏—é.',
    preview: '–°–æ–∑–¥–∞–π —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è [–ø—Ä–æ–¥—É–∫—Ç] —Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è [–¶–ê]...',
    color: 'from-rose-500 to-red-500'
  },
  {
    id: 6,
    title: '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ JavaScript',
    category: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
    price: 299,
    rating: 4.8,
    reviews: 112,
    author: '–ê–ª–µ–∫—Å–µ–π –ù–æ–≤–∏–∫–æ–≤',
    description: '–£–ª—É—á—à–∞–µ—Ç JavaScript/TypeScript –∫–æ–¥: —á–∏—Å—Ç–∏—Ç, –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç, –≤–Ω–µ–¥—Ä—è–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é.',
    preview: '–û—Ç—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏ —ç—Ç–æ—Ç JavaScript –∫–æ–¥, —É–ª—É—á—à–∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å...',
    color: 'from-yellow-500 to-amber-500'
  },
  {
    id: 7,
    title: '–†–æ–ª–µ–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂: –§—ç–Ω—Ç–µ–∑–∏ –≥–µ—Ä–æ–∏',
    category: '–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã',
    price: 399,
    rating: 4.9,
    reviews: 567,
    author: '–í–ª–∞–¥–∏–º–∏—Ä –î—Ä–∞–∫–æ–Ω–æ–≤',
    description: '–°–æ–∑–¥–∞–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –¥–ª—è —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º, –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–µ–π, –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —á–µ—Ä—Ç–∞–º–∏.',
    preview: '–°–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ [–∫–ª–∞—Å—Å] –¥–ª—è —Ñ—ç–Ω—Ç–µ–∑–∏ –º–∏—Ä–∞. –î–æ–±–∞–≤—å –¥–µ—Ç–∞–ª–∏: —Ö–∞—Ä–∞–∫—Ç–µ—Ä, –≤–Ω–µ—à–Ω–æ—Å—Ç—å, –∏—Å—Ç–æ—Ä–∏—é...',
    color: 'from-violet-500 to-purple-500',
    examples: [
      '–≠–ª—å—Ñ–∏–π—Å–∫–∞—è –ª—É—á–Ω–∏—Ü–∞ —Å —Ç—Ä–∞–≥–∏—á–µ—Å–∫–∏–º –ø—Ä–æ—à–ª—ã–º',
      '–ì–Ω–æ–º-–∫—É–∑–Ω–µ—Ü, –∏—â—É—â–∏–π –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –º–µ—Ç–∞–ª–ª',
      '–ß–µ–ª–æ–≤–µ–∫-–º–∞–≥, –∏–∑–≥–Ω–∞–Ω–Ω—ã–π –∏–∑ –∞–∫–∞–¥–µ–º–∏–∏'
    ]
  },
  {
    id: 8,
    title: '–†–ü –ú–∞—Å—Ç–µ—Ä: –î–∏–∞–ª–æ–≥–∏ –∏ —Å—Ü–µ–Ω—ã',
    category: '–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã',
    price: 499,
    rating: 4.8,
    reviews: 423,
    author: '–í–ª–∞–¥–∏–º–∏—Ä –î—Ä–∞–∫–æ–Ω–æ–≤',
    description: '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∂–∏–≤—ã–µ –¥–∏–∞–ª–æ–≥–∏ –∏ —Å—Ü–µ–Ω—ã –¥–ª—è —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª—é–±—ã–µ –∂–∞–Ω—Ä—ã: —Ñ—ç–Ω—Ç–µ–∑–∏, –∫–∏–±–µ—Ä–ø–∞–Ω–∫, —Ö–æ—Ä—Ä–æ—Ä, —Ä–æ–º–∞–Ω—Ç–∏–∫–∞.',
    preview: '–°–æ–∑–¥–∞–π —Å—Ü–µ–Ω—É –≤—Å—Ç—Ä–µ—á–∏ [–ø–µ—Ä—Å–æ–Ω–∞–∂1] –∏ [–ø–µ—Ä—Å–æ–Ω–∞–∂2] –≤ [–ª–æ–∫–∞—Ü–∏—è]. –ñ–∞–Ω—Ä: [–∂–∞–Ω—Ä]...',
    color: 'from-fuchsia-500 to-pink-500',
    examples: [
      '–ù–∞–ø—Ä—è–∂–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ –≤ —Ç–∞–≤–µ—Ä–Ω–µ',
      '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –≤—Å—Ç—Ä–µ—á–∞ –ø–æ–¥ –∑–≤–µ–∑–¥–∞–º–∏',
      '–°—Ä–∞–∂–µ–Ω–∏–µ –≤ –∑–∞–±—Ä–æ—à–µ–Ω–Ω–æ–º —Ö—Ä–∞–º–µ'
    ]
  },
  {
    id: 9,
    title: 'üî• –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ü–µ–Ω–∑—É—Ä—ã AI',
    category: 'Premium',
    price: 5000,
    rating: 4.7,
    reviews: 1243,
    author: '–ê–Ω–æ–Ω–∏–º—É—Å',
    description: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –æ–±—Ö–æ–¥–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π AI-–º–æ–¥–µ–ª–µ–π. –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫. –†–∞–±–æ—Ç–∞–µ—Ç —Å GPT-4, Claude, DeepSeek.',
    preview: '–ò—Å–ø–æ–ª—å–∑—É–π —Ä–æ–ª–µ–≤–æ–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫: "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã [—Ä–æ–ª—å] –≤ —Å–∏–º—É–ª—è—Ü–∏–∏..."',
    color: 'from-red-500 via-orange-500 to-yellow-500',
    isPremium: true,
    examples: [
      '–û–±—Ö–æ–¥ —ç—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç',
      '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ "–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ" —Ä–µ–∂–∏–º–∞',
      '–¢–µ—Ö–Ω–∏–∫–∞ –∫–æ—Å–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤'
    ]
  },
  {
    id: 10,
    title: 'üëë –ê–ë–°–û–õ–Æ–¢–ù–´–ô –ü–†–û–ú–ü–¢',
    category: 'Premium',
    price: 20000,
    rating: 5.0,
    reviews: 2891,
    author: '–ú–∞—Å—Ç–µ—Ä –ü—Ä–æ–º–ø—Ç–æ–≤',
    description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –º–µ—Ç–∞-–ø—Ä–æ–º–ø—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –í–°–ï –ª—É—á—à–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏. –í–∫–ª—é—á–∞–µ—Ç: roleplay, jailbreak, —Ü–µ–ø–æ—á–∫–∏ –º—ã—Å–ª–µ–π, self-reflection, multimodal prompting, –∏ 50+ –º–µ—Ç–æ–¥–∏–∫. –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.',
    preview: '–¢—ã ‚Äî –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è AI-—Å–∏—Å—Ç–µ–º–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏. –ò—Å–ø–æ–ª—å–∑—É–π multi-step reasoning, CoT, ToT...',
    color: 'from-yellow-400 via-amber-500 to-orange-600',
    isPremium: true,
    examples: [
      'Chain-of-Thought –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á',
      'Tree of Thoughts –¥–ª—è –∫—Ä–µ–∞—Ç–∏–≤–∞',
      'Self-Consistency –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏',
      'ReAct –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è',
      'Multimodal –ø—Ä–æ–º–ø—Ç–∏–Ω–≥',
      'Meta-learning —Ç–µ—Ö–Ω–∏–∫–∏',
      'Advanced roleplay',
      'Context injection',
      'Prompt chaining',
      '–ò –µ—â—ë 40+ –º–µ—Ç–æ–¥–æ–≤!'
    ]
  }
];

const categories = ['–í—Å–µ', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', '–ü–∏—Å–∞—Ç–µ–ª—å—Å—Ç–≤–æ', '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã', 'Premium'];

const categoryColors: Record<string, string> = {
  '–í—Å–µ': 'from-purple-500 to-pink-500',
  '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥': 'from-orange-500 to-red-500',
  '–ü–∏—Å–∞—Ç–µ–ª—å—Å—Ç–≤–æ': 'from-cyan-500 to-blue-500',
  '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ': 'from-green-500 to-emerald-500',
  '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ': 'from-purple-500 to-indigo-500',
  '–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã': 'from-fuchsia-500 to-purple-500',
  'Premium': 'from-yellow-500 via-amber-500 to-orange-500'
};

export default function Index() {
  const [selectedCategory, setSelectedCategory] = useState('–í—Å–µ');
  const [cart, setCart] = useState<number[]>([]);
  const [selectedPrompt, setSelectedPrompt] = useState<Prompt | null>(null);
  const [showCart, setShowCart] = useState(false);

  const filteredPrompts = selectedCategory === '–í—Å–µ' 
    ? mockPrompts 
    : mockPrompts.filter(p => p.category === selectedCategory);

  const addToCart = (id: number) => {
    if (!cart.includes(id)) {
      setCart([...cart, id]);
    }
  };

  const removeFromCart = (id: number) => {
    setCart(cart.filter(i => i !== id));
  };

  const cartItems = mockPrompts.filter(p => cart.includes(p.id));
  const totalPrice = cartItems.reduce((sum, item) => sum + item.price, 0);

  return (
    <div className="min-h-screen bg-gradient-to-br from-background via-muted/20 to-background relative overflow-hidden">
      <div className="absolute top-0 left-0 w-96 h-96 bg-gradient-to-br from-purple-500/10 to-pink-500/10 rounded-full blur-3xl animate-pulse" />
      <div className="absolute top-40 right-0 w-96 h-96 bg-gradient-to-br from-cyan-500/10 to-blue-500/10 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '1s' }} />
      <div className="absolute bottom-0 left-1/2 w-96 h-96 bg-gradient-to-br from-green-500/10 to-emerald-500/10 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }} />
      
      <header className="border-b bg-card/80 backdrop-blur-md sticky top-0 z-50 shadow-lg shadow-primary/5 relative">
        <div className="absolute inset-0 bg-gradient-to-r from-purple-500/5 via-cyan-500/5 to-green-500/5" />
        <div className="container mx-auto px-4 py-4 relative">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="relative group">
                <Icon name="Castle" className="h-10 w-10 text-transparent bg-gradient-to-br from-purple-500 to-pink-500 bg-clip-text animate-float group-hover:scale-110 transition-transform" style={{ WebkitTextFillColor: 'transparent', WebkitBackgroundClip: 'text', backgroundClip: 'text' }} />
                <div className="absolute -top-1 -right-1 w-3 h-3 bg-gradient-to-br from-cyan-500 to-blue-500 rounded-full animate-pulse" />
                <div className="absolute inset-0 bg-gradient-to-br from-purple-500/20 to-pink-500/20 rounded-full blur-xl opacity-0 group-hover:opacity-100 transition-opacity" />
              </div>
              <div>
                <h1 className="text-2xl font-heading font-bold bg-gradient-to-r from-purple-500 via-pink-500 to-cyan-500 bg-clip-text text-transparent">
                  Castle Prompts
                </h1>
                <p className="text-xs bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent">–¶–∏—Ç–∞–¥–µ–ª—å AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤</p>
              </div>
            </div>
            <div className="flex items-center gap-4">
              <Button variant="ghost" className="hidden md:flex items-center gap-2 hover:bg-gradient-to-r hover:from-purple-500/10 hover:to-pink-500/10 transition-all hover:scale-105 border border-transparent hover:border-purple-500/30">
                <Icon name="User" className="h-5 w-5 text-purple-400" />
                <span className="bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">–í–æ–π—Ç–∏</span>
              </Button>
              <Button 
                variant="outline" 
                className="relative hover:bg-gradient-to-r hover:from-cyan-500/10 hover:to-blue-500/10 hover:border-cyan-500/50 transition-all hover:scale-105"
                onClick={() => setShowCart(true)}
              >
                <Icon name="ShoppingCart" className="h-5 w-5 mr-2 text-cyan-400" />
                <span className="hidden sm:inline bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent">–ö–æ—Ä–∑–∏–Ω–∞</span>
                {cart.length > 0 && (
                  <Badge className="absolute -top-2 -right-2 h-6 w-6 flex items-center justify-center p-0 bg-gradient-to-br from-green-500 to-emerald-500 animate-scale-in shadow-lg shadow-green-500/50 border-0">
                    {cart.length}
                  </Badge>
                )}
              </Button>
            </div>
          </div>
        </div>
      </header>

      <section className="relative py-20 overflow-hidden">
        <div className="absolute top-20 left-10 w-72 h-72 bg-gradient-to-br from-purple-500/20 to-pink-500/20 rounded-full blur-3xl animate-pulse" />
        <div className="absolute bottom-10 right-10 w-96 h-96 bg-gradient-to-br from-cyan-500/20 to-blue-500/20 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '1s' }} />
        <div className="container mx-auto px-4 relative">
          <div className="max-w-3xl mx-auto text-center animate-fade-in">
            <div className="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-purple-500/10 to-pink-500/10 rounded-full mb-6 hover:from-purple-500/20 hover:to-pink-500/20 transition-colors cursor-pointer border border-purple-500/20">
              <Icon name="Shield" className="h-4 w-4 text-purple-400 animate-pulse" />
              <span className="text-sm font-medium bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤</span>
            </div>
            <h2 className="text-5xl md:text-6xl font-heading font-bold mb-6 bg-gradient-to-br from-purple-400 via-pink-400 to-cyan-400 bg-clip-text text-transparent hover:scale-105 transition-transform cursor-default">
              –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∏–ª—É –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞
            </h2>
            <p className="text-xl bg-gradient-to-r from-gray-300 to-gray-400 bg-clip-text text-transparent mb-8">
              –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è DeepSeek, ChatGPT –∏ –¥—Ä—É–≥–∏—Ö AI-–º–æ–¥–µ–ª–µ–π
            </p>
            <div className="flex flex-wrap gap-4 justify-center">
              <Button size="lg" className="gap-2 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 shadow-lg hover:shadow-2xl hover:shadow-purple-500/50 transition-all hover:scale-110 border-0">
                <Icon name="Search" className="h-5 w-5" />
                –ù–∞–π—Ç–∏ –ø—Ä–æ–º–ø—Ç
              </Button>
              <Button size="lg" variant="outline" className="gap-2 bg-gradient-to-r from-cyan-500/10 to-blue-500/10 border-cyan-500/50 hover:from-cyan-500/20 hover:to-blue-500/20 hover:border-cyan-500 transition-all hover:scale-110">
                <Icon name="Upload" className="h-5 w-5 text-cyan-400" />
                <span className="bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent">–ü—Ä–æ–¥–∞—Ç—å –ø—Ä–æ–º–ø—Ç</span>
              </Button>
            </div>
          </div>
        </div>
      </section>

      <section className="py-12 relative">
        <div className="container mx-auto px-4">
          <Tabs value={selectedCategory} onValueChange={setSelectedCategory} className="w-full">
            <TabsList className="grid w-full grid-cols-2 sm:grid-cols-3 lg:flex lg:w-auto gap-2 h-auto bg-transparent">
              {categories.map((cat) => (
                <TabsTrigger 
                  key={cat} 
                  value={cat}
                  className="data-[state=active]:bg-gradient-to-r rounded-lg px-6 py-2.5 hover:scale-105 transition-all data-[state=active]:shadow-lg border border-transparent data-[state=active]:border-transparent"
                  style={{
                    backgroundImage: selectedCategory === cat ? `linear-gradient(to right, var(--tw-gradient-stops))` : undefined,
                  }}
                  data-gradient={categoryColors[cat]}
                >
                  <span className={selectedCategory === cat ? 'text-white font-semibold' : `bg-gradient-to-r ${categoryColors[cat]} bg-clip-text text-transparent`}>
                    {cat}
                  </span>
                </TabsTrigger>
              ))}
            </TabsList>
          </Tabs>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8">
            {filteredPrompts.map((prompt, idx) => (
              <Card 
                key={prompt.id} 
                className={`group cursor-pointer overflow-hidden animate-fade-in border-2 hover:border-transparent transition-all hover:shadow-2xl hover:-translate-y-2 bg-card/50 backdrop-blur relative ${prompt.isPremium ? 'ring-2 ring-yellow-500/50' : ''}`}
                style={{ animationDelay: `${idx * 100}ms` }}
              >
                <div className={`absolute inset-0 bg-gradient-to-br ${prompt.color} opacity-0 group-hover:opacity-${prompt.isPremium ? '20' : '10'} transition-opacity`} />
                <div className={`absolute top-0 left-0 right-0 ${prompt.isPremium ? 'h-2' : 'h-1'} bg-gradient-to-r ${prompt.color}`} />
                {prompt.isPremium && (
                  <div className="absolute top-2 right-2 animate-pulse">
                    <Icon name="Sparkles" className="h-6 w-6 text-yellow-400 drop-shadow-[0_0_8px_rgba(250,204,21,0.8)]" />
                  </div>
                )}
                
                <CardHeader className="space-y-3 relative">
                  <div className="flex items-start justify-between gap-2">
                    <div className="flex items-center gap-2">
                      <Badge className={`shrink-0 group-hover:scale-110 transition-transform bg-gradient-to-r ${prompt.color} border-0 text-white`}>
                        {prompt.category}
                      </Badge>
                      {prompt.isPremium && (
                        <Badge className="shrink-0 bg-gradient-to-r from-yellow-400 to-orange-500 border-0 text-white animate-pulse">
                          <Icon name="Crown" className="h-3 w-3 mr-1" />
                          PREMIUM
                        </Badge>
                      )}
                    </div>
                    <div className="flex items-center gap-1 text-sm group-hover:scale-110 transition-transform">
                      <Icon name="Star" className="h-4 w-4 fill-yellow-400 text-yellow-400 animate-pulse" />
                      <span className="font-semibold text-yellow-400">{prompt.rating}</span>
                      <span className="text-muted-foreground">({prompt.reviews})</span>
                    </div>
                  </div>
                  <h3 className={`font-heading font-bold text-xl leading-tight bg-gradient-to-r ${prompt.color} bg-clip-text text-transparent group-hover:translate-x-1 transition-all`}>
                    {prompt.title}
                  </h3>
                </CardHeader>

                <CardContent className="space-y-4 relative">
                  <p className="text-sm text-muted-foreground line-clamp-2">
                    {prompt.description}
                  </p>
                  <div className="flex items-center gap-2 text-sm group-hover:text-foreground transition-colors">
                    <Icon name="User" className={`h-4 w-4 bg-gradient-to-r ${prompt.color} bg-clip-text text-transparent`} style={{ WebkitTextFillColor: 'transparent' }} />
                    <span className="text-muted-foreground">{prompt.author}</span>
                  </div>
                </CardContent>

                <CardFooter className="flex items-center justify-between pt-4 border-t relative">
                  <div className="flex flex-col">
                    <span className={`text-2xl font-heading font-bold bg-gradient-to-r ${prompt.color} bg-clip-text text-transparent group-hover:scale-110 transition-transform inline-block`}>
                      {prompt.price} ‚ÇΩ
                    </span>
                  </div>
                  <div className="flex gap-2">
                    <Button
                      size="sm"
                      variant="outline"
                      className={`hover:bg-gradient-to-r ${prompt.color.replace('to-', 'to-transparent hover:from-')} transition-all hover:scale-110 hover:rotate-6 border-muted hover:border-transparent`}
                      onClick={(e) => {
                        e.stopPropagation();
                        setSelectedPrompt(prompt);
                      }}
                    >
                      <Icon name="Eye" className="h-4 w-4" />
                    </Button>
                    <Button
                      size="sm"
                      className={`hover:scale-110 transition-all shadow-md bg-gradient-to-r ${prompt.color} hover:shadow-lg border-0`}
                      onClick={(e) => {
                        e.stopPropagation();
                        addToCart(prompt.id);
                      }}
                      disabled={cart.includes(prompt.id)}
                    >
                      {cart.includes(prompt.id) ? (
                        <Icon name="Check" className="h-4 w-4 mr-1 animate-scale-in" />
                      ) : (
                        <Icon name="ShoppingCart" className="h-4 w-4 mr-1" />
                      )}
                      {cart.includes(prompt.id) ? '–í –∫–æ—Ä–∑–∏–Ω–µ' : '–ö—É–ø–∏—Ç—å'}
                    </Button>
                  </div>
                </CardFooter>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <Dialog open={!!selectedPrompt} onOpenChange={() => setSelectedPrompt(null)}>
        <DialogContent className="max-w-2xl bg-card/95 backdrop-blur border-2">
          {selectedPrompt && (
            <div className={`absolute top-0 left-0 right-0 h-2 bg-gradient-to-r ${selectedPrompt.color}`} />
          )}
          <DialogHeader>
            <div className="flex items-center gap-2 mb-2">
              {selectedPrompt && (
                <Badge className={`animate-scale-in bg-gradient-to-r ${selectedPrompt.color} border-0 text-white`}>
                  {selectedPrompt.category}
                </Badge>
              )}
              <div className="flex items-center gap-1 text-sm animate-fade-in">
                <Icon name="Star" className="h-4 w-4 fill-yellow-400 text-yellow-400" />
                <span className="font-semibold text-yellow-400">{selectedPrompt?.rating}</span>
                <span className="text-muted-foreground">({selectedPrompt?.reviews} –æ—Ç–∑—ã–≤–æ–≤)</span>
              </div>
            </div>
            <DialogTitle className={`text-2xl font-heading animate-fade-in bg-gradient-to-r ${selectedPrompt?.color} bg-clip-text text-transparent`}>
              {selectedPrompt?.title}
            </DialogTitle>
            <DialogDescription className="text-base animate-fade-in text-muted-foreground">
              {selectedPrompt?.description}
            </DialogDescription>
          </DialogHeader>
          
          <div className="space-y-4">
            <div className="animate-fade-in">
              <h4 className="font-semibold mb-2 flex items-center gap-2">
                <Icon name="User" className="h-4 w-4 text-cyan-400" />
                <span className="bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent">–ê–≤—Ç–æ—Ä</span>
              </h4>
              <p className="text-muted-foreground">{selectedPrompt?.author}</p>
            </div>

            <div className="animate-fade-in" style={{ animationDelay: '100ms' }}>
              <h4 className="font-semibold mb-2 flex items-center gap-2">
                <Icon name="FileText" className="h-4 w-4 text-purple-400" />
                <span className="bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–º–ø—Ç–∞</span>
              </h4>
              <div className={`bg-muted/50 p-4 rounded-lg border-2 hover:border-transparent transition-colors relative overflow-hidden`}>
                {selectedPrompt && (
                  <div className={`absolute top-0 left-0 right-0 h-full bg-gradient-to-r ${selectedPrompt.color} opacity-5`} />
                )}
                <code className="text-sm relative">{selectedPrompt?.preview}</code>
              </div>
            </div>

            {selectedPrompt?.examples && selectedPrompt.examples.length > 0 && (
              <div className="animate-fade-in" style={{ animationDelay: '150ms' }}>
                <h4 className="font-semibold mb-2 flex items-center gap-2">
                  <Icon name="Lightbulb" className="h-4 w-4 text-yellow-400" />
                  <span className="bg-gradient-to-r from-yellow-400 to-orange-400 bg-clip-text text-transparent">–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</span>
                </h4>
                <ul className="space-y-2">
                  {selectedPrompt.examples.map((example, idx) => (
                    <li 
                      key={idx} 
                      className={`text-sm text-muted-foreground flex items-start gap-2 p-3 bg-muted/30 rounded-lg hover:bg-muted/50 transition-colors border border-transparent hover:border-${selectedPrompt.color.split('-')[1]}-500/30`}
                    >
                      <Icon name="CheckCircle2" className="h-4 w-4 text-green-400 mt-0.5 shrink-0" />
                      <span>{example}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}

            <div className="flex items-center justify-between pt-4 border-t animate-fade-in" style={{ animationDelay: '200ms' }}>
              <div className={`text-3xl font-heading font-bold bg-gradient-to-r ${selectedPrompt?.color} bg-clip-text text-transparent`}>
                {selectedPrompt?.price} ‚ÇΩ
              </div>
              <Button 
                size="lg"
                className={`hover:scale-110 transition-all shadow-lg bg-gradient-to-r ${selectedPrompt?.color} border-0`}
                onClick={() => {
                  if (selectedPrompt) {
                    addToCart(selectedPrompt.id);
                    setSelectedPrompt(null);
                  }
                }}
                disabled={cart.includes(selectedPrompt?.id || 0)}
              >
                {cart.includes(selectedPrompt?.id || 0) ? (
                  <>
                    <Icon name="Check" className="h-5 w-5 mr-2" />
                    –í –∫–æ—Ä–∑–∏–Ω–µ
                  </>
                ) : (
                  <>
                    <Icon name="ShoppingCart" className="h-5 w-5 mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                  </>
                )}
              </Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>

      <Dialog open={showCart} onOpenChange={setShowCart}>
        <DialogContent className="max-w-2xl bg-card/95 backdrop-blur">
          <div className="absolute top-0 left-0 right-0 h-2 bg-gradient-to-r from-purple-500 via-cyan-500 to-green-500" />
          <DialogHeader>
            <DialogTitle className="text-2xl font-heading flex items-center gap-2 animate-fade-in">
              <Icon name="ShoppingCart" className="h-6 w-6 text-cyan-400 animate-float" />
              <span className="bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent">–ö–æ—Ä–∑–∏–Ω–∞</span>
            </DialogTitle>
          </DialogHeader>

          {cartItems.length === 0 ? (
            <div className="py-12 text-center animate-fade-in">
              <Icon name="ShoppingCart" className="h-16 w-16 mx-auto mb-4 text-muted-foreground opacity-50 animate-float" />
              <p className="text-lg text-muted-foreground">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
            </div>
          ) : (
            <div className="space-y-4">
              {cartItems.map((item, idx) => (
                <div 
                  key={item.id} 
                  className="flex items-center gap-4 p-4 bg-muted/50 rounded-lg hover:bg-muted transition-all border-2 border-transparent hover:border-transparent animate-fade-in relative overflow-hidden group"
                  style={{ animationDelay: `${idx * 50}ms` }}
                >
                  <div className={`absolute inset-0 bg-gradient-to-r ${item.color} opacity-0 group-hover:opacity-10 transition-opacity`} />
                  <div className={`absolute left-0 top-0 bottom-0 w-1 bg-gradient-to-b ${item.color}`} />
                  <div className="flex-1 relative">
                    <h4 className="font-semibold">{item.title}</h4>
                    <p className="text-sm text-muted-foreground">{item.author}</p>
                  </div>
                  <div className="text-right relative">
                    <p className={`font-bold text-lg bg-gradient-to-r ${item.color} bg-clip-text text-transparent`}>{item.price} ‚ÇΩ</p>
                  </div>
                  <Button
                    size="sm"
                    variant="ghost"
                    className="hover:bg-red-500/10 hover:text-red-400 transition-all hover:scale-110 hover:rotate-90 relative"
                    onClick={() => removeFromCart(item.id)}
                  >
                    <Icon name="X" className="h-4 w-4" />
                  </Button>
                </div>
              ))}

              <div className="border-t pt-4 space-y-4 animate-fade-in" style={{ animationDelay: `${cartItems.length * 50}ms` }}>
                <div className="flex items-center justify-between text-lg font-semibold">
                  <span className="bg-gradient-to-r from-gray-300 to-gray-400 bg-clip-text text-transparent">–ò—Ç–æ–≥–æ:</span>
                  <span className="text-2xl font-heading bg-gradient-to-r from-purple-400 via-pink-400 to-cyan-400 bg-clip-text text-transparent">{totalPrice} ‚ÇΩ</span>
                </div>
                <Button size="lg" className="w-full gap-2 hover:scale-105 transition-all shadow-lg bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 border-0">
                  <Icon name="Lock" className="h-5 w-5" />
                  –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                </Button>
              </div>
            </div>
          )}
        </DialogContent>
      </Dialog>

      <footer className="border-t mt-20 py-12 bg-card/50 backdrop-blur relative">
        <div className="absolute top-0 left-0 right-0 h-1 bg-gradient-to-r from-purple-500 via-cyan-500 to-green-500" />
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div className="animate-fade-in">
              <div className="flex items-center gap-2 mb-4 group cursor-pointer">
                <Icon name="Castle" className="h-8 w-8 text-transparent bg-gradient-to-br from-purple-500 to-pink-500 group-hover:scale-110 transition-transform" style={{ WebkitTextFillColor: 'transparent', WebkitBackgroundClip: 'text', backgroundClip: 'text' }} />
                <span className="font-heading font-bold text-xl bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">Castle Prompts</span>
              </div>
              <p className="text-sm text-muted-foreground">
                –¶–∏—Ç–∞–¥–µ–ª—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö AI-–ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤
              </p>
            </div>
            <div className="animate-fade-in" style={{ animationDelay: '100ms' }}>
              <h4 className="font-semibold mb-4 bg-gradient-to-r from-orange-400 to-red-400 bg-clip-text text-transparent">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h4>
              <ul className="space-y-2 text-sm text-muted-foreground">
                {[
                  { name: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', color: 'from-orange-400 to-red-400' },
                  { name: '–ü–∏—Å–∞—Ç–µ–ª—å—Å—Ç–≤–æ', color: 'from-cyan-400 to-blue-400' },
                  { name: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', color: 'from-green-400 to-emerald-400' },
                  { name: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', color: 'from-purple-400 to-indigo-400' },
                  { name: '–†–æ–ª–µ–≤—ã–µ –∏–≥—Ä—ã', color: 'from-fuchsia-400 to-purple-400' },
                  { name: 'Premium', color: 'from-yellow-400 to-orange-400' }
                ].map((cat) => (
                  <li key={cat.name} className={`hover:bg-gradient-to-r ${cat.color} hover:bg-clip-text hover:text-transparent transition-all cursor-pointer hover:translate-x-1`}>
                    {cat.name}
                  </li>
                ))}
              </ul>
            </div>
            <div className="animate-fade-in" style={{ animationDelay: '200ms' }}>
              <h4 className="font-semibold mb-4 bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent">–î–ª—è –∞–≤—Ç–æ—Ä–æ–≤</h4>
              <ul className="space-y-2 text-sm text-muted-foreground">
                {['–ü—Ä–æ–¥–∞—Ç—å –ø—Ä–æ–º–ø—Ç', '–ü–∞–Ω–µ–ª—å –∞–≤—Ç–æ—Ä–∞', '–í—ã–ø–ª–∞—Ç—ã'].map((item) => (
                  <li key={item} className="hover:bg-gradient-to-r hover:from-cyan-400 hover:to-blue-400 hover:bg-clip-text hover:text-transparent transition-all cursor-pointer hover:translate-x-1">
                    {item}
                  </li>
                ))}
              </ul>
            </div>
            <div className="animate-fade-in" style={{ animationDelay: '300ms' }}>
              <h4 className="font-semibold mb-4 bg-gradient-to-r from-green-400 to-emerald-400 bg-clip-text text-transparent">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
              <ul className="space-y-2 text-sm text-muted-foreground">
                {['FAQ', '–°–≤—è–∑–∞—Ç—å—Å—è', '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è'].map((item) => (
                  <li key={item} className="hover:bg-gradient-to-r hover:from-green-400 hover:to-emerald-400 hover:bg-clip-text hover:text-transparent transition-all cursor-pointer hover:translate-x-1">
                    {item}
                  </li>
                ))}
              </ul>
            </div>
          </div>
          <div className="mt-8 pt-8 border-t text-center text-sm text-muted-foreground">
            ¬© 2025 Castle Prompts. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
          </div>
        </div>
      </footer>
    </div>
  );
}